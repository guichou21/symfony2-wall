<?php

namespace Proxies\__CG__\GbCreation\WallBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Item extends \GbCreation\WallBundle\Entity\Item implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getFullImagePath()
    {
        $this->__load();
        return parent::getFullImagePath();
    }

    public function upload()
    {
        $this->__load();
        return parent::upload();
    }

    public function preUpload()
    {
        $this->__load();
        return parent::preUpload();
    }

    public function preRemoveUpload()
    {
        $this->__load();
        return parent::preRemoveUpload();
    }

    public function removeUpload()
    {
        $this->__load();
        return parent::removeUpload();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setFile($file)
    {
        $this->__load();
        return parent::setFile($file);
    }

    public function getFile()
    {
        $this->__load();
        return parent::getFile();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setRatio($ratio)
    {
        $this->__load();
        return parent::setRatio($ratio);
    }

    public function getRatio()
    {
        $this->__load();
        return parent::getRatio();
    }

    public function setReverseRatio($reverseRatio)
    {
        $this->__load();
        return parent::setReverseRatio($reverseRatio);
    }

    public function getReverseRatio()
    {
        $this->__load();
        return parent::getReverseRatio();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setTags($tags)
    {
        $this->__load();
        return parent::setTags($tags);
    }

    public function getTags()
    {
        $this->__load();
        return parent::getTags();
    }

    public function addComment(\GbCreation\WallBundle\Entity\Comment $comments)
    {
        $this->__load();
        return parent::addComment($comments);
    }

    public function removeComment(\GbCreation\WallBundle\Entity\Comment $comments)
    {
        $this->__load();
        return parent::removeComment($comments);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setNbLike($nbLike)
    {
        $this->__load();
        return parent::setNbLike($nbLike);
    }

    public function getNbLike()
    {
        $this->__load();
        return parent::getNbLike();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'file', 'description', 'date', 'ratio', 'reverseRatio', 'nbLike', 'type', 'tags', 'comments');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}